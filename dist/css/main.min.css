/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:'PTSans bold';src:url("../fonts/PTSans/PT_Sans-Web-Bold.woff") format("woff");font-weight:700;font-style:normal}@font-face{font-family:'PTSans';src:url("../fonts/PTSans/PT_Sans-Web-Regular.woff") format("woff");font-weight:400;font-style:normal}@font-face{font-family:'Courier New';src:url("../fonts/CourierNew/CourierNewRegular.woff") format("woff");font-weight:400;font-style:normal}html{font-family:'PT Sans', sans-serif}body{position:relative;min-height:calc(100vh - 65px);padding:0 0 65px;background:#3d3d3d url(../images/bg.jpg) center top repeat-y;animation:show 1s linear}div{box-sizing:border-box}h2{font-family:"PTSans bold";font-size:24px;line-height:1;color:#2f1b15}p.is-text{font-family:"PTSans";color:#3d3d3d;font-size:15px;line-height:23px}.container{width:1000px;padding:0 117px 0 112px;box-sizing:border-box;margin:0 auto}.container--no-padding{padding:40px 0;margin:0 auto 50px}.rotate180{transform:rotate(180deg)}.checkbox__input:checked+label .icon-check,.checkbox__label span,.checkbox__label span a,.checkbox__label .icon-box,.radiobox,.radiobox__input:checked+label .icon-point,.radiobox__label span,.radiobox__label .icon-circle,.checkboxes__content-col,.leveljs__content-block,.date__content-title,.date__content-input,.slider__pagination-item,.footer__link{display:inline-block;vertical-align:top}.is-compressed{letter-spacing:-1px}@keyframes show{0%{opacity:0.1}100%{opacity:1}}.icon{display:inline-block}.icon-box{background-image:url(../images/sprite.png);background-position:-505px -60px;width:19px;height:18px}.icon-business{background-image:url(../images/sprite.png);background-position:0px -166px;width:221px;height:118px}.icon-check{background-image:url(../images/sprite.png);background-position:-470px -60px;width:21px;height:27px}.icon-circle{background-image:url(../images/sprite.png);background-position:-406px -60px;width:41px;height:45px}.icon-csssr{background-image:url(../images/sprite.png);background-position:-252px -60px;width:154px;height:52px}.icon-cursor{background-image:url(../images/sprite.png);background-position:-524px -60px;width:17px;height:14px}.icon-dash_long{background-image:url(../images/sprite.png);background-position:-491px -60px;width:14px;height:26px}.icon-dash_short{background-image:url(../images/sprite.png);background-position:-541px -60px;width:20px;height:11px}.icon-line{background-image:url(../images/sprite.png);background-position:0px 0px;width:774px;height:60px}.icon-point{background-image:url(../images/sprite.png);background-position:-447px -60px;width:23px;height:27px}.icon-prev{background-image:url(../images/sprite.png);background-position:-221px -166px;width:34px;height:61px}.icon-secret{background-image:url(../images/sprite.png);background-position:0px -60px;width:252px;height:106px}.checkbox{margin:0 0 9.8px;position:relative}.checkbox__input{display:none}.checkbox__label{font-size:0;white-space:nowrap;cursor:pointer}.checkbox__label span{font-family:"PTSans bold";font-size:21px;line-height:25px;white-space:normal;color:#000}.checkbox__label span>span{transform:translate3d(0, 1.5px, 0);padding:0 4px 0 0}.checkbox__label span>span:last-child{padding:0;transform:translate3d(0, 3px, 0);margin:0 0 3px}.checkbox__label span a{height:22px;border-bottom:1px solid #1f5f97}.checkbox__label span a span{font-family:'PTSans bold', sans-serif;font-size:21px;text-decoration:none;color:#1f5f97}.checkbox__label .icon-box{margin:3px 8px 0 0}.checkbox__label .icon-check{position:absolute;top:-6px;left:3px;display:none}.radiobox{position:relative}.radiobox__input{display:none}.radiobox__label{transform:translate3d(-5px, 0, 0);cursor:pointer}.radiobox__label span{font-family:"PTSans bold";font-size:20px;line-height:22px;letter-spacing:-0.05px;color:#000}.radiobox__label .icon-circle{transform:translate3d(0, -10px, 0);margin:0 0 0 -9px}.radiobox__label .icon-point{position:absolute;bottom:15px;left:0;display:none}@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none){.radiobox__label .icon-point{bottom:18px}}.header{height:300px;font-size:0}.header__logo,.header__title,.header__atribute{float:left;height:100%}.header__logo{width:154px;padding:62px 0 0;margin:0 102px 0 0}.header__title{width:221px;padding:154px 0 0;margin:0 105px 0 0}.header__atribute{width:152px;padding:48px 0 0}.anketa{padding:20px 0 0}.anketa__content-item{display:flex;justify-content:flex-start;height:50px;margin:0 0 13px}.anketa__content-item:nth-child(2){margin:-3px 0 11px}.anketa__content-item:nth-child(3) .anketa__content-name{padding:21px 0 0}.anketa__content-item:nth-child(3) .anketa__content-data{padding:7px 0 0 15px}.anketa__content-item:nth-child(4) .anketa__content-name{padding:21px 0 0}.anketa__content-item:nth-child(4) .anketa__content-data{padding:9px 0 0 13px}.anketa__content-item:nth-child(5) .anketa__content-name{padding:21px 0 0}.anketa__content-item:nth-child(5) .anketa__content-data{padding:7px 0 0 14px;background-position-y:18px}.anketa__content-name{padding:18px 0 0;font-family:"PTSans bold";font-size:22.44px;line-height:36px;text-align:left;color:#2f1b15;margin:0 16px 0 -0.7px}.anketa__content-data{flex-grow:1;padding:5px 0 0 15px;font-family:"Courier New";font-size:30px;line-height:36px;font-weight:400;text-align:left;color:#231f20;background:url(../images/line.png) center 19px no-repeat}.anketa__content-data p{width:100%;margin:0}.anketa__content-data input{width:100%;border:none;background:none}.anketa__content-data input:focus{outline:none}.checkboxes{padding:54px 0 31px}.checkboxes__title{margin:0 0 27px}.checkboxes__title h2{margin:0 0 11px -1px}.checkboxes__title p.is-text{letter-spacing:-0.06px;color:#3d3d3d;margin:0}.checkboxes__content{font-size:0}.checkboxes__content-col:first-child{width:258px}.checkboxes__content-col:nth-child(2){width:269px}.checkboxes__content-col:nth-child(3){width:242px}.leveljs{margin:0 0 33px}.leveljs__title{margin:0 0 26px 1px}.leveljs__content-cursor{height:20px;background:url(../images/line.png) center -12px no-repeat;background-size:105% auto;margin:0 0 -2px}.leveljs__content-blocks{font-size:0}.leveljs__content-block{font-family:"PTSans bold";font-size:13px;line-height:19px;color:#2e1a15}.leveljs__content-block:first-child{width:146px}.leveljs__content-block:nth-child(2){width:226px}.leveljs__content-block:nth-child(3){width:170px}.leveljs__content-block:last-child{width:calc(100% - 542px);text-align:right}.leveljs__content-block:last-child .icon-dash_long{transform:translate3d(225px, 0, 0);margin:0 0 8px}.leveljs__content-block .icon-dash_short{transform:translate3d(-4px, 0, 0);margin:0 0 16px}.leveljs__content-block .icon-dash_long{margin:0 0 3px}.about{margin:0 0 42px}.about__title{margin:0 0 22px}.about__title h2{margin:0 0 13px 2px}.about__title p.is-text{letter-spacing:-0.05px;margin:0 0 0 3px}.about__content textarea{width:100%;min-height:186px;resize:none;padding:1px 0 2px 3px;font-family:'Courier New';font-size:30px;line-height:60px;color:#231f20;border:none;background:rgba(0,0,0,0) url(../images/line.png) repeat-y;background-position-y:21px;background-position-x:-4px;transition:height 0.5s linear;overflow:hidden}.about__content textarea:focus{outline:none}.about__clone{position:relative;overflow:hidden}.about__clone-textarea{position:absolute;top:0;left:-500%;width:100%;padding:3px 2px;font-family:'Courier New';font-size:30px;line-height:60px;white-space:pre-wrap;color:#231f20}.plans{margin:0 0 55px}.plans__title{margin:0 0 15px}.plans__title h2{margin:0 0 10px}.plans__title p.is-text{letter-spacing:-0.04px;margin:0}.plans__radioboxes .radiobox{margin:0 19px 0 0}.date{padding:0 0 65px}.date__content-title{padding:18px 0 0;font-family:"PTSans bold";font-size:22.44px;line-height:36px;text-align:left;color:#2f1b15;margin:0 7px 0 -0.7px}.date__content-input{padding:5px 0 10px 15px;font-family:"Courier New";font-size:30px;line-height:36px;font-weight:400;text-align:left;color:#231f20;background:url(../images/line.png) left 14px no-repeat}.date__content-input p{margin:0}.date__content-input input{width:198px;min-width:198px;border:none;background:none}.date__content-input input:focus{outline:none}.slider__title{margin:0 0 20px}.slider__title h2{margin:0 0 15px 2px}.slider__title p.is-text{letter-spacing:-0.05px;margin-left:3px}.slider__hide{position:relative;width:100%;height:600px}.slider__hide-wrapper{position:relative;height:100%}.slider__hide-wrapper .slider__arrow-prev,.slider__hide-wrapper .slider__arrow-next{position:absolute;top:calc(50% - 30px);cursor:pointer}.slider__hide-wrapper .slider__arrow-prev .icon,.slider__hide-wrapper .slider__arrow-next .icon{border-radius:3px}.slider__hide-wrapper .slider__arrow-prev{left:10px}.slider__hide-wrapper .slider__arrow-next{right:10px}.slider__hide-img{position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden;opacity:0}.slider__hide-img img{position:absolute;top:50%;left:50%;width:100%;transform:translate3d(-50%, -50%, 0)}.slider__hide-img--hidden{opacity:0;transition:visibility 0s .5s, opacity .5s linear}.slider__hide-img--visible{opacity:1;transition:visibility 0s .5s, opacity .5s linear}.slider__pagination{position:absolute;bottom:20px;left:0;width:100%;height:15px;text-align:center}.slider__pagination-item{width:15px;height:15px;border-radius:50%;border:1px solid #3d3d3d;background-color:#ffe0b2;margin:0 15px 0 0;cursor:pointer}.slider__pagination-item:last-child{margin:0}.slider__pagination-item.is-active{background-color:#ffb74d;pointer-events:none}.footer{position:absolute;bottom:0;left:0;width:100%;height:65px}.footer__content-title{padding:18px 0 0;font-family:"PTSans bold";font-size:22.44px;line-height:36px;text-align:left;color:#2f1b15;margin:0 7px 0 -0.7px}.footer__nav{height:100%;text-align:center}.footer__link{margin:0 10px}.footer__link a{padding:6px 12px;font-family:'PTSans bold', sans-serif;font-size:16px;text-decoration:none;text-transform:uppercase;border:1px solid #2f1b15;border-radius:16px;color:#2f1b15;transition:background-color 0.5s linear}.footer__link a:hover{background-color:rgba(0,0,0,0.15)}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
